import {
  RiAccountBoxLine,
  RiAccountCircleLine,
  RiAddBoxLine,
  RiAddCircleLine,
  RiAddLine,
  RiAlarmLine,
  RiAliensLine,
  RiAlignBottom,
  RiAlignCenter,
  RiAlignLeft,
  RiAlignRight,
  RiAlignTop,
  RiAnchorLine,
  RiArchiveLine,
  RiArrowDownCircleLine,
  RiArrowDownLine,
  RiArrowDownSLine,
  RiArrowLeftCircleLine,
  RiArrowLeftLine,
  RiArrowLeftSLine,
  RiArrowRightCircleLine,
  RiArrowRightLine,
  RiArrowRightSLine,
  RiArrowUpCircleLine,
  RiArrowUpLine,
  RiArrowUpSLine,
  RiAtLine,
  RiAwardLine,
  RiBankLine,
  RiBarChartBoxLine,
  RiBarChartLine,
  RiBattery2ChargeLine,
  RiBatteryChargeFill,
  RiBatteryLine,
  RiBatteryLowLine,
  RiBellLine,
  RiBillLine,
  RiBluetoothLine,
  RiBookLine,
  RiBookmarkLine,
  RiBriefcaseLine,
  RiBrushLine,
  RiBugLine,
  RiCakeLine,
  RiCalendarLine,
  RiCamera2Fill,
  RiCameraLine,
  RiChatAiLine,
  RiChatPrivateLine,
  RiChatVoiceAiFill,
  RiChatVoiceLine,
  RiCheckLine,
  RiCheckboxBlankCircleFill,
  RiCheckboxBlankLine,
  RiCheckboxCircleFill,
  RiCloseCircleLine,
  RiCloseLine,
  RiCloudLine,
  RiCloudWindyFill,
  RiCodeLine,
  RiCoinLine,
  RiCommandLine,
  RiCompassLine,
  RiContrastLine,
  RiCopyleftLine,
  RiCornerDownLeftFill,
  RiCursorLine,
  RiDashboardLine,
  RiDeleteBack2Fill,
  RiDeleteBin5Line,
  RiDeleteBinLine,
  RiDeleteColumn,
  RiDirectionFill,
  RiDonutChartFill,
  RiDownloadCloudLine,
  RiDownloadLine,
  RiDragDropLine,
  RiEditLine,
  RiEmotionUnhappyLine,
  RiErrorWarningLine,
  RiExchangeLine,
  RiExternalLinkLine,
  RiEyeCloseLine,
  RiEyeLine,
  RiFacebookLine,
  RiFileLine,
  RiFilmLine,
  RiFilterLine,
  RiFlagLine,
  RiFlashlightLine,
  RiFolderLine,
  RiFormatClear,
  RiFullscreenExitFill,
  RiGiftLine,
  RiGoogleLine,
  RiGroupLine,
  RiHardDriveLine,
  RiHeartLine,
  RiSendBackward,
  RiVipDiamondFill,
} from "@remixicon/react";
import { cn } from "@/util/cn";
import { SVGProps } from "react";

type AllSVGProps = SVGProps<SVGSVGElement>;
type ReservedProps = "color" | "size" | "width" | "height" | "fill" | "viewBox";
interface RemixiconProps
  extends Pick<AllSVGProps, Exclude<keyof AllSVGProps, ReservedProps>> {
  color?: string;
  size?: number | string;
  children?: never;
}

const iconMap = {
  RiAccountBoxLine,
  RiAccountCircleLine,
  RiAddBoxLine,
  RiAddCircleLine,
  RiAddLine,
  RiAlarmLine,
  RiAliensLine,
  RiAlignBottom,
  RiAlignCenter,
  RiAlignLeft,
  RiAlignRight,
  RiAlignTop,
  RiAnchorLine,
  RiArchiveLine,
  RiArrowDownCircleLine,
  RiArrowDownLine,
  RiArrowDownSLine,
  RiArrowLeftCircleLine,
  RiArrowLeftLine,
  RiArrowLeftSLine,
  RiArrowRightCircleLine,
  RiArrowRightLine,
  RiArrowRightSLine,
  RiArrowUpCircleLine,
  RiArrowUpLine,
  RiArrowUpSLine,
  RiAtLine,
  RiAwardLine,
  RiBankLine,
  RiBarChartBoxLine,
  RiBarChartLine,
  RiBattery2ChargeLine,
  RiBatteryChargeFill,
  RiBatteryLine,
  RiBatteryLowLine,
  RiBellLine,
  RiBillLine,
  RiBluetoothLine,
  RiBookLine,
  RiBookmarkLine,
  RiBriefcaseLine,
  RiBrushLine,
  RiBugLine,
  RiCakeLine,
  RiCalendarLine,
  RiCamera2Fill,
  RiCameraLine,
  RiChatAiLine,
  RiChatPrivateLine,
  RiChatVoiceAiFill,
  RiChatVoiceLine,
  RiCheckLine,
  RiCheckboxBlankCircleFill,
  RiCheckboxBlankLine,
  RiCheckboxCircleFill,
  RiCloseCircleLine,
  RiCloseLine,
  RiCloudLine,
  RiCloudWindyFill,
  RiCodeLine,
  RiCoinLine,
  RiCommandLine,
  RiCompassLine,
  RiContrastLine,
  RiCopyleftLine,
  RiCornerDownLeftFill,
  RiCursorLine,
  RiDashboardLine,
  RiDeleteBack2Fill,
  RiDeleteBin5Line,
  RiDeleteBinLine,
  RiDeleteColumn,
  RiDirectionFill,
  RiDonutChartFill,
  RiDownloadCloudLine,
  RiDownloadLine,
  RiDragDropLine,
  RiEditLine,
  RiEmotionUnhappyLine,
  RiErrorWarningLine,
  RiExchangeLine,
  RiExternalLinkLine,
  RiEyeCloseLine,
  RiEyeLine,
  RiFacebookLine,
  RiFileLine,
  RiFilmLine,
  RiFilterLine,
  RiFlagLine,
  RiFlashlightLine,
  RiFolderLine,
  RiFormatClear,
  RiFullscreenExitFill,
  RiGiftLine,
  RiGoogleLine,
  RiGroupLine,
  RiHardDriveLine,
  RiHeartLine,
  RiSendBackward,
  RiVipDiamondFill,
};

type RemixIconsType = keyof typeof iconMap;

export interface IconProps extends RemixiconProps {
  name: RemixIconsType;
}

function Icon({ name, className, ...props }: IconProps) {
  const RemixIcon = iconMap[name];

  return <RemixIcon className={cn("shrink-0", className)} {...props} />;
}

export { Icon };
